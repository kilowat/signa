"use strict";var SignaCmp=(()=>{var c=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.prototype.hasOwnProperty;var i=(t=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(t,{get:(e,o)=>(typeof require!="undefined"?require:e)[o]}):t)(function(t){if(typeof require!="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var b=(t,e)=>{for(var o in e)c(t,o,{get:e[o],enumerable:!0})},d=(t,e,o,u)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of p(e))!m.call(t,r)&&r!==o&&c(t,r,{get:()=>e[r],enumerable:!(u=s(e,r))||u.enumerable});return t};var v=t=>d(c({},"__esModule",{value:!0}),t);var y={};b(y,{Button:()=>k});var n=i("signa/core");var l=i("signa/core/component-styles"),a=(0,l.createComponentStyles)("signa-button",':host { display: inline-block; } .signa-button { background: var(--signa-button-background, #007bff); color: var(--signa-button-color, #ffffff); padding: var(--signa-button-padding, 8px 16px); border-radius: var(--signa-button-radius, 4px); border: var(--signa-button-border, none); cursor: pointer; } .signa-button:hover { background: var(--signa-button-hover-background, #0056b3); } :host([variant="secondary"]) .signa-button { background: var(--signa-button-secondary-background, #6c757d); } :host([variant="outline"]) .signa-button { background: transparent; border: 1px solid var(--signa-button-background, #007bff); color: var(--signa-button-background, #007bff); }');var N=(0,n.defineStore)({key:"counter",state:{count:0},computed:()=>({double:()=>!0})});(0,n.defineComponent)({tagName:"my-counter",state:{count:0},props:{val:{type:Number,default:20}},listen(t){},connected(t){a.connectComponent(t.el)},disconnected(t){a.disconnectComponent(t.el)},getters:t=>({counterStore:()=>t.store.$("counter"),hi:()=>"hi"}),computed:({state:t,props:e})=>(console.log(e),{doubleCount:()=>t.value.count+e.val,isEven:()=>t.value.count%2===0}),actions:({state:t})=>({increment:e=>{t.emit({count:t.value.count+e})},reset:()=>{t.emit({count:0})}}),render:t=>{let{state:e,computed:o,actions:u,getters:{counterStore:r}}=t;return n.html`<div> <p>Count test: ${e.value.count}</p> <p>Double: ${o.doubleCount}</p> <p>Is Even: ${o.isEven}</p> <button onclick=${()=>u.increment(1)}>+1</button> <button onclick=${u.reset}>Reset</button> </div>`}});(0,n.defineComponent)({tagName:"my-counter-2",state:{count:0},props:{count:{type:Number,default:0}},getters:t=>({hi:()=>"hi",counterStore:()=>t.store.$("counter")}),computed:({state:t})=>({doubleCount:()=>t.value.count*2,isEven:()=>t.value.count%2===0}),actions:({state:t})=>({increment:e=>{t.emit({count:t.value.count+e})},reset:()=>{t.emit({count:0})}}),listen(t){},render:({props:t,state:e,computed:o,actions:u,getters:{counterStore:r,hi:x}})=>n.html`<div> counter 2 component props value ${t.count} <p>Count: ${e.value.count}</p> <p>Double: ${o.doubleCount}</p> <p>Is Even: ${o.isEven}</p> <button onclick=${()=>u.increment(1)}>+1</button> <button onclick=${u.reset}>Reset</button> <my-component data-count="${e.value.count}"></my-component> </div>`});(0,n.defineComponent)({tagName:"my-component",state:{count:0},props:{count:{type:Number,default:0}},getters:t=>({hi:()=>"hi",counterStore:()=>t.store.$("counter")}),computed:({state:t})=>({doubleCount:()=>t.value.count*2,isEven:()=>t.value.count%2===0}),actions:({state:t})=>({increment:e=>{t.emit({count:t.value.count+e})},reset:()=>{t.emit({count:0})}}),listen(t){},render:({props:t,state:e,computed:o,actions:u,getters:{counterStore:r}})=>n.html`<div> <div>props: ${t.count}</div> <p >Count: ${e.value.count}</p> <p>Double: ${o.doubleCount}</p> <p>Is Even: ${o.isEven}</p> <button onclick=${()=>u.increment(1)}>+1</button> <button onclick=${u.reset}>Reset</button> </div>`});var g={count:0},f=t=>({inc:()=>t.emit({count:t.value.count+1})});(0,n.defineComponent)({tagName:"parent-example-cmp-2",state:{example:0,...g},actions:({state:t})=>({...f(t),myinc:()=>{t.emit({example:t.value.example+1})}}),render(t){return n.html`${t.state.value.example}<example-cmp @button-click="${()=>console.log("button-click event")}"></example-cmp>`}});(0,n.defineComponent)({tagName:"example-cmp",render(t){return n.html`<button @click="${()=>t.el.emitEvent("button-click")}">Click</button>`}});var $=(0,n.createState)(0),D=$.value+1;(0,n.defineComponent)({tagName:"example-cmp-2",render(t){return n.html`<button @click="${()=>t.el.emitEvent("button-click")}">Click</button>`}});var k=(0,n.defineComponent)({tagName:"signa-button",props:{variant:{type:String,default:"primary"}},render:({slots:t})=>(console.log(t.default),n.html`<button class="signa-button"> ${t.default} </button>`)});return v(y);})();
